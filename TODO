Completed Tasks:
1.User Authentication
1.1 Created login and registration views.
1.2 Implemented automatic login after registration.
1.3 Configured redirects for login and registration to the all-unis page.

2.Navigation and Layout
2.1 Created a navigation menu.
2.2 Added conditional display of links based on authentication status (e.g., login/logout logic).
2.3 Styled the navigation for better user experience.

3.Profile Management
3.1 Created a Profile model linked to the user.
3.2 Built a Profile Details Page:
    Displays user information and profile picture (with default fallback).
    Includes "Edit Profile" and "Delete Profile" buttons.
3.3 Created an Edit Profile Page:
    Allows users to update their profile data.
3.4 Developed a Delete Profile Page:
    Confirmation dialog before deleting a profile.
    Successfully deletes the user and profile on confirmation.

4.Styling
4.1 Styled the Profile Details Page.
4.2 Fixed layout issues for the "Edit" and "Delete" buttons.
4.3 Styled the Delete Profile Confirmation Page:
    Ensured buttons are aligned and visually consistent
4.4.Styled following pages: Home, All-unis, Login, Register

5.Universities Section
5.1 Implemented the all-unis page as a central page for viewing universities.
5.2.Implement link inside every uni for all students of this uni and style it as well in form of cards

Pending Tasks:
1.Universities Functionality
1.1 Implement CRUD operations for universities:
    Create: Allow users to add a new university.
    Read: Display detailed information about a specific university.
    Update: Allow editing of university details.
    Delete: Enable university removal (with confirmation).
1.2 Implement CRUD Functionality for the students of the specific uni
1.3 Implement a logic so that the user would be able to contact the students for advice (comments, emails?)

2.My Uni Section
2.1 Implement functionality for the "My Uni" page.
2.2 Link a user to a specific university.
2.3 Display university information personalized to the user.
2.4 Add a "Set My Uni" option on the all-unis or profile page.

3.Advanced Profile Features
3.1 Allow users to upload and change their profile picture.
3.2 Add additional fields to the profile (e.g., bio, date of birth, etc.).

4.Authorization and Permissions
4.1 Restrict certain actions (e.g., editing/deleting universities) to authorized users.
4.2 Add role-based access control (e.g., admin functionality for university management).

5.Improved Navigation
5.1 Highlight the active page in the navigation menu.
5.2 Add a "Back" or "Cancel" link/button on edit and delete pages for improved navigation.

6.Styling Enhancements
6.1 Unify the styling across all pages for consistency (e.g., font, colors, button sizes).
6.2 Make all pages responsive for mobile devices.

7.Testing and Debugging
7.1 Test all views, forms, and buttons for edge cases and bugs.
7.2 Handle potential issues, such as:
    Users accessing pages they shouldnâ€™t (e.g., deleting a profile without being logged in).
    Broken links or form errors.

8.Documentation
8.1 Write detailed README.md explaining:
    Project purpose and features.
    Setup and installation instructions.
    How to contribute or extend the project.
8.2 Document the codebase (e.g., add comments in views, models, and templates).
